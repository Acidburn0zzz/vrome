#!/usr/bin/env ruby

require 'rubygems'
require 'webrick'
require 'tempfile'
require 'json'

port = 20000

if ARGV[0] =~ /^\d+$/
  port = ARGV[0].to_i
end

class VromeServer < WEBrick::HTTPServlet::AbstractServlet

  def do_POST(request, response)
    request = JSON.parse(request.body)
    status, content_type, body = self.send(request['method'].to_sym,request)

    response.status          = status
    response['Content-Type'] = content_type
    response.body            = body
    response['Content-Type'] = "text/plain"
    response['Access-Control-Allow-Origin'] = '*'
    response['Access-Control-Allow-Methods'] = 'POST'
    response['Access-Control-Allow-Headers'] = 'Content-Type, Cache-Control'
    response['Access-Control-Max-Age'] = 5
  end

  def open_editor(request)
    editor  = request['editor']

    tmpfile = Tempfile.new('editor')
    tmpfile.write request['data']
    tmpfile.flush

    editor = 'gvim -f' if editor == 'gvim' # Foreground: Don't fork when starting GUI
    system("#{editor} #{tmpfile.path}")
    text = File.read(tmpfile.path)

    tmpfile.delete

    return 200, "text/plain", text
  end
 
  def get_latest_version(request)
    filename = File.dirname(File.expand_path(__FILE__)) + "/../../../utils/version.txt"
    version = (File.read(filename)) if File.exists?(filename)
    return 200, "text/plain", version
  end

  def do_GET(request, response)
    body = ""
    filename = ENV['HOME'] + '/.vromerc'
    body = File.read(filename) if File.exists?(filename) rescue ""

    response.status          = 200
    response['Content-Type'] = "text/plain"
    response.body            = body
  end

end

puts "Starting Vrome server..."

server = WEBrick::HTTPServer.new(:BindAddress => '127.0.0.1', :Port => port)
server.mount "/", VromeServer
trap(:INT) { server.shutdown }
server.start
