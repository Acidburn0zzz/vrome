#!/usr/bin/env ruby

require 'rubygems'
require 'webrick'
require 'tempfile'
require 'json'
require 'open-uri'
require 'fileutils'

port = 20000

if ARGV[0] =~ /^\d+$/
  port = ARGV[0].to_i
end

class VromeServer < WEBrick::HTTPServlet::AbstractServlet

  def do_POST(request, response)
    request = JSON.parse(request.body)
    status, content_type, body = self.send(request['method'].to_sym,request)

    response.status          = status
    response['Content-Type'] = content_type
    response.body            = body
    response['Content-Type'] = "text/plain"
    response['Access-Control-Allow-Origin'] = '*'
    response['Access-Control-Allow-Methods'] = 'POST'
    response['Access-Control-Allow-Headers'] = 'Content-Type, Cache-Control'
    response['Access-Control-Max-Age'] = 5
  end

  def print_messages(request)
    puts "\e[31m" + ">" * 50 + Time.now.to_s + "   \e[0m"
    puts request["messages"]
    return 200, "text/plain", ""
  end

  def open_editor(request)
    editor = request['editor']
    line   = request['line'] || 0
    column = request['col'] || 0

    tmpfile = Tempfile.new('editor')
    tmpfile.write request['data']
    tmpfile.flush

    editor = 'gvim -f' if editor == 'gvim' # Foreground: Don't fork when starting GUI
    system("#{editor} #{tmpfile.path} -c 'call cursor(#{line}, #{column})'")
    text = File.read(tmpfile.path)

    return 200, "text/plain", text
  end
 
  def get_latest_version(request)
    filename = File.dirname(File.expand_path(__FILE__)) + "/../../../utils/version.txt"
    version = File.read(filename) if File.exists?(filename)
    return 200, "text/plain", version
  end

  def switch_chrome_css(request)
    res = ''

    if request['filename']
      content = open(request['filename']) {|f| f.read }
      dir = Dir[File.join(ENV['HOME'], ".config", "chrom*", "Default", "User StyleSheets")][0]

      vrome_filename = File.join(dir, "vrome.css")
      custom_filename = File.join(dir, "Custom.css")

      File.open(vrome_filename, 'w+') {|f| f << content } if content

      if File.exist?(vrome_filename)
        unless content == File.read(custom_filename)
          FileUtils.mv(custom_filename, "#{custom_filename}.bak.#{Time.now.to_i}.css")
          File.open(custom_filename, 'w+') {|f| f.write(content) }
        end
        res = "enabled"
      else
        res = "permission issues"
      end
    end

    return 200, "text/plain", res
  end

  def do_GET(request, response)
    filename = ENV['HOME'] + File::SEPARATOR + '.vromerc'
    body = File.exist?(filename) ? File.read(filename) : "" rescue ""

    response.status          = 200
    response['Content-Type'] = "text/plain"
    response.body            = body
  end
end

puts "Starting Vrome server..."

server = WEBrick::HTTPServer.new(:BindAddress => '127.0.0.1', :Port => port)
server.mount "/", VromeServer
trap(:INT) { server.shutdown }
server.start
